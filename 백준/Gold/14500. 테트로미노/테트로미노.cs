StreamReader sr = new StreamReader(Console.OpenStandardInput());

// 입력받기
string[] tokens = sr.ReadLine().Split();
int N = int.Parse(tokens[0]); // 세로
int M = int.Parse(tokens[1]); // 가로

int[,] board = new int[N, M];

for (int i = 0; i < N; i++) {
	int[] row = sr.ReadLine().Split().Select(int.Parse).ToArray();
	for (int j = 0; j < M; j++) {
		board[i, j] = row[j];
	}
}



byte[,,] tetris = {
	{   {1, 1, 0, 0 },
		{1, 1, 0, 0 },
		{0, 0, 0, 0 },
		{0, 0, 0, 0 }   } ,

	{   {1, 1, 1, 1 },
		{0, 0, 0, 0 },
		{0, 0, 0, 0 },
		{0, 0, 0, 0 }   } ,

	{   {1, 0, 0, 0 },
		{1, 0, 0, 0 },
		{1, 0, 0, 0 },
		{1, 0, 0, 0 }   } ,

	{   {1, 0, 0, 0 },
		{1, 0, 0, 0 },
		{1, 1, 0, 0 },
		{0, 0, 0, 0 }   } ,

	{   {0, 0, 1, 0 },
		{1, 1, 1, 0 },
		{0, 0, 0, 0 },
		{0, 0, 0, 0 }   } ,

	{   {1, 1, 0, 0 },
		{0, 1, 0, 0 },
		{0, 1, 0, 0 },
		{0, 0, 0, 0 }   } ,

	{   {1, 1, 1, 0 },
		{1, 0, 0, 0 },
		{0, 0, 0, 0 },
		{0, 0, 0, 0 }   } ,

	{   {0, 1, 0, 0 },
		{0, 1, 0, 0 },
		{1, 1, 0, 0 },
		{0, 0, 0, 0 }   } ,

	{   {1, 1, 1, 0 },
		{0, 0, 1, 0 },
		{0, 0, 0, 0 },
		{0, 0, 0, 0 }   } ,

	{   {1, 1, 0, 0 },
		{1, 0, 0, 0 },
		{1, 0, 0, 0 },
		{0, 0, 0, 0 }   } ,

	{   {1, 0, 0, 0 },
		{1, 1, 1, 0 },
		{0, 0, 0, 0 },
		{0, 0, 0, 0 }   } ,

	{   {1, 0, 0, 0 },
		{1, 1, 0, 0 },
		{0, 1, 0, 0 },
		{0, 0, 0, 0 }   } ,

	{   {0, 1, 1, 0 },
		{1, 1, 0, 0 },
		{0, 0, 0, 0 },
		{0, 0, 0, 0 }   } ,

	{   {0, 1, 0, 0 },
		{1, 1, 0, 0 },
		{1, 0, 0, 0 },
		{0, 0, 0, 0 }   } ,

	{   {1, 1, 0, 0 },
		{0, 1, 1, 0 },
		{0, 0, 0, 0 },
		{0, 0, 0, 0 }   } ,

	{   {0, 1, 0, 0 },
		{1, 1, 1, 0 },
		{0, 0, 0, 0 },
		{0, 0, 0, 0 }   } ,

	{   {0, 1, 0, 0 },
		{1, 1, 0, 0 },
		{0, 1, 0, 0 },
		{0, 0, 0, 0 }   } ,

	{   {1, 1, 1, 0 },
		{0, 1, 0, 0 },
		{0, 0, 0, 0 },
		{0, 0, 0, 0 }   } ,

	{   {1, 0, 0, 0 },
		{1, 1, 0, 0 },
		{1, 0, 0, 0 },
		{0, 0, 0, 0 }   } ,
};

int max = 0;

for (int n = 0; n < N; n++) {
	for (int m = 0; m < M; m++) {
		for (int i = 0; i < 19; i++) {
			max = Math.Max(max, Sum(i, m, n)); // m = 열, n = 행
		}
	}
}

Console.WriteLine(max);

// 조각 안의 숫자를 더하는 메서드
int Sum(int index, int m, int n)
{
	int sum = 0;

	for (int x = 0; x < 4; x++) {
		for (int y = 0; y < 4; y++) {
			if (tetris[index, x, y] == 0)
				continue;

			int ny = n + x; // 행 (세로)
			int nx = m + y; // 열 (가로)

			if (ny >= N || nx >= M)
				return 0;

			sum += board[ny, nx]; // board[행, 열]
		}
	}

	return sum;
}